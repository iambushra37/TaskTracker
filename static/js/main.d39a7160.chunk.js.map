{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","Header","title","onAdd","showAdd","location","useLocation","pathname","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","Contact","App","showForm","setShowForm","setTasks","useEffect","a","fetchTasks","getTasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updateTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d39a7160.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n\nconst Button = ({ color, text, onClick }) => {\n\n    return (\n        <button onClick={onClick}\n            className='btn' style={{ backgroundColor: color }}>\n            {text}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    color: PropTypes.string,\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n}\nexport default Button\n","import { useLocation } from 'react-router-dom'\nimport Button from './Button'\nconst Header = ({ title, onAdd, showAdd }) => {\n    const location = useLocation()\n    return (\n        <header className='header'>\n            <h1 >{title}</h1>\n            { location.pathname === \"/\" && <Button color={showAdd ? \"red\" : \"green\"}\n                text={showAdd ? \"Close\" : \"Add\"}\n                onClick={onAdd} />}\n        </header>\n    )\n}\n\n//give styling using objects\n// const headingStyle = {\n//     color: \"red\",\n//     backgroundColor: \"yellow\"\n// }\nHeader.defaultProps = {\n    title: \"Task Tracker!!!\"\n}\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : \"\"}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3 >{task.text}\n                <FaTimes style={{ color: \"red\", cursor: \"pointer\" }}\n                    onClick={() => onDelete(task.id)} />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n\n\n    return (\n        <>\n            {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete}\n                onToggle={onToggle}\n            />))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react';\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState(\"\")\n    const [day, setDay] = useState(\"\")\n    const [reminder, setReminder] = useState(false)\n\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!text) {\n            alert(\"Please add a task\");\n            return\n        }\n        onAdd({ text, day, reminder });\n        setText(\"\");\n        setDay(\"\");\n        setReminder(false);\n\n\n    }\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>TasK: </label>\n                <input type=\"text\" placeholder=\"Add task\" value={text}\n                    onChange={(e) => setText(e.target.value)} />\n            </div>\n\n            <div className=\"form-control\">\n                <label>Day & Reminder </label>\n                <input type=\"text\" placeholder=\"Add day & time\" value={day}\n                    onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Reminder </label>\n                <input type=\"checkbox\"\n                    checked={reminder}\n                    value={reminder}\n                    onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n            <input type=\"submit\" value=\"save\" className=\"btn btn-block\" />\n        </form>\n\n    )\n}\n\nexport default AddTask\n","\nimport { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>CopyRights &#169; 2021</p>\n            <Link to=\"/about\">About Me</Link>\n            <br></br>\n            <Link to=\"/contactus\">Contact Us!</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n\n    return (\n        <div>\n            <h4>Version: 1.5.5</h4>\n\n            <Link to=\"/\">Go back!</Link>\n        </div>\n    )\n}\nexport default About\n","import { Link } from 'react-router-dom'\n\nconst Contact = () => {\n    return (\n        <div>\n            <h3>Feel free to contact us at: </h3>\n            <h4>+91-0000-0000-00</h4>\n            <h4>example@example.com</h4>\n            <Link to=\"/\">Go Back</Link>\n        </div>\n    )\n}\n\nexport default Contact\n","import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\nimport Footer from \"./components/Footer\"\nimport About from \"./components/About\"\nimport Contact from \"./components/Contact\"\n\n\nfunction App() {\n  const [showForm, setShowForm] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n\n  //use effect to fetch data and render\n  useEffect(() => {\n    const getTasks = async () => {\n      const getTasksFromServer = await fetchTasks();\n      setTasks(getTasksFromServer)\n    }\n    getTasks();\n  }, [])\n  //FEtch tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\")\n    const data = await res.json();\n    return data\n  }\n\n\n  //FEtch a particulartasks\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json();\n    return data\n  }\n  //Add new task\n\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n\n    const data = await res.json()\n    setTasks([...tasks, data])\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask])\n  }\n  //delete task\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, { method: 'DELETE' })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updateTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updateTask)\n    })\n\n    const data = await res.json();\n\n\n    setTasks(tasks.map((task) => task.id === id ?\n      { ...task, reminder: data.reminder } : task\n    ))\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowForm(!showForm)}\n          showAdd={showForm} />\n\n        <Route path=\"/\" exact\n          render={\n            (props) => (\n              <>\n                {showForm && <AddTask onAdd={addTask} />}\n\n                {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                /> : (\"No tasks pending\")}\n\n              </>\n            )\n          }\n        />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contactus\" component={Contact} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}